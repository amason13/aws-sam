AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Serverless patterns - Amazon API Gateway REST API with Cognito User Pools
  Authorizer
Globals:
  Function:
    Runtime: python3.10
    CodeUri: src/
Parameters:
  Email:
    Type: String
  CallbackUrl:
    Type: String
  CompanyName:
    Type: String
Resources:
  CognitoApp:
    Type: AWS::Serverless::Application
    Properties:
      Location: CognitoApp/template.yaml
      Parameters:
        Email:
          Ref: Email
        CallbackUrl:
          Ref: CallbackUrl
        CompanyName:
          Ref: CompanyName
    Metadata:
      SamResourceId: CognitoApp
  AppApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: cognito-restapi
      Description: Cognito User Pools Authorizer REST API demo
  RootMethodGet:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId:
        Ref: AppApi
      ResourceId:
        Fn::GetAtt:
        - AppApi
        - RootResourceId
      HttpMethod: GET
      AuthorizationType: COGNITO_USER_POOLS
      AuthorizerId:
        Ref: AuthorizersCognitoUserPools
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri:
          Fn::Join:
          - ''
          - - 'arn:aws:apigateway:'
            - Ref: AWS::Region
            - :lambda:path/2015-03-31/functions/
            - Fn::GetAtt:
              - AppFunction
              - Arn
            - /invocations
  AuthorizersCognitoUserPools:
    Type: AWS::ApiGateway::Authorizer
    Properties:
      Name: CognitoAuthorizer
      Type: COGNITO_USER_POOLS
      RestApiId:
        Ref: AppApi
      IdentitySource: method.request.header.authorizationToken
      ProviderARNs:
      - Fn::GetAtt:
        - CognitoApp
        - Outputs.CognitoUserPoolArn
  AppFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: app.handler
      CodeUri: AppFunction
    Metadata:
      SamResourceId: AppFunction
  AppFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName:
        Ref: AppFunction
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Sub: arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${AppApi}/*/GET/
  Deployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
    - RootMethodGet
    Properties:
      RestApiId:
        Ref: AppApi
  Stage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: Prod
      RestApiId:
        Ref: AppApi
      DeploymentId:
        Ref: Deployment
Outputs:
  AppApiEndpoint:
    Description: API Endpoint
    Value:
      Fn::Sub: https://${AppApi}.execute-api.${AWS::Region}.amazonaws.com/Prod
